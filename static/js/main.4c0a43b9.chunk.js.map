{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics-list.module.css","components/Friends/FriendListItem.module.css","components/Statistics/Section.module.css","components/Container/Container.module.css","components/Friends/FriendList.module.css","components/TransactionHistory/Transaction.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Container/Container.jsx","components/Profile/Profile.jsx","components/Statistics/Section.jsx","components/Statistics/Statistical-item.jsx","components/Statistics/Statistics-list.jsx","components/Friends/FriendListItem.jsx","components/Friends/FriendList.jsx","components/TransactionHistory/Transaction.jsx","components/TransactionHistory/TransactionHistory.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Container","children","className","styles","container","Profile","name","tag","location","avatar","stats","followers","views","likes","profile","description","src","alt","label","quantity","defaultProps","Section","statistics","title","StatisticalItem","percentage","randomColor","Math","floor","random","toString","style","backgroundColor","item","StatisticsList","statisticalData","list","map","statisticalElement","id","FriendListItem","status","status__active","width","FriendList","friends","friend","isOnline","Transaction","type","amount","currency","tb_row","TransactionHistory","transactions","transaction_history","transaction","App","user","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c0a43b9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3dzvr\",\"description\":\"Profile_description__2GJPq\",\"avatar\":\"Profile_avatar__aV4u5\",\"name\":\"Profile_name__2Psdw\",\"tag\":\"Profile_tag__20iCl\",\"location\":\"Profile_location__3GRdm\",\"stats\":\"Profile_stats__25zJx\",\"label\":\"Profile_label__3Zjy8\",\"quantity\":\"Profile_quantity__1zFQ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics-list_list__LetMp\",\"item\":\"Statistics-list_item__4q4BH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__264gJ\",\"status\":\"FriendListItem_status__1Fi8F\",\"status__active\":\"FriendListItem_status__active__1y45D FriendListItem_status__1Fi8F\",\"avatar\":\"FriendListItem_avatar__XufPd\",\"name\":\"FriendListItem_name__19npN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Section_statistics__235aD\",\"title\":\"Section_title__3G6rz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FriendList_list__3W6xz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tb_row\":\"Transaction_tb_row__2R9lD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction_history\":\"TransactionHistory_transaction_history__11IMY\"};","import styles from './Container.module.css';\n\nconst Container = ({ children }) => {\n    return (\n    <div className={styles.container}>\n        {children}\n    </div>\n    )\n};\n\nexport default Container;","import PropTypes from 'prop-types';\nimport styles from './Profile.module.css';\n\nconst Profile = ({ name, tag, location, avatar, stats: { followers, views, likes } }) => {\n\nreturn (\n    <div className={styles.profile}>\n        <div className={styles.description}>\n          <img\n            src={avatar}\n            alt={name}\n            className={styles.avatar}\n          />\n          <p className={styles.name}>{name}</p>\n          <p className={styles.tag}>{tag}</p>\n          <p className={styles.location}>{location}</p>\n        </div>\n        <ul className={styles.stats}>\n          <li>\n            <span className={styles.label}>Followers</span>\n            <span className={styles.quantity}>{followers}</span>\n          </li>\n          <li>\n            <span className={styles.label}>Views</span>\n            <span className={styles.quantity}>{views}</span>\n          </li>\n          <li>\n            <span className={styles.label}>Likes</span>\n            <span className={styles.quantity}>{likes}</span>\n          </li>\n        </ul>\n    </div>\n);\n};\n\nProfile.defaultProps = {\n    avatar: \"https://www.flaticon.com/svg/static/icons/svg/3135/3135715.svg\",\n}\n\nProfile.propTypes = {\n    name: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    avatar: PropTypes.string,\n    followers: PropTypes.number,\n    views: PropTypes.number,\n    likes: PropTypes.number,\n}\n\nexport default Profile;","import styles from './Section.module.css';\n\nconst Section = ({ children }) => {\n    return (\n        <section className={styles.statistics}>\n            <h2 className={styles.title}>Upload stats</h2>\n            {children}\n            </section>\n    );\n}\n\n\nexport default Section;","import styles from './Statistics-list.module.css';\nimport PropTypes from 'prop-types';\n\n\nconst StatisticalItem = ({ label, percentage }) => {\n  const randomColor = '#'+Math.floor(Math.random()*16777215).toString(16);\n    \n    return (\n    <li style={{backgroundColor: randomColor}} \n    className={styles.item}>\n      <span className={styles.label}>{label}</span>\n      <span className={styles.percentage}>{percentage}%</span>\n    </li>\n    )\n};\n\n\nStatisticalItem.propTypes = {\n    label: PropTypes.string.isRequired,\n    percentage: PropTypes.number.isRequired,\n}\n\nexport default StatisticalItem;","import StatisticalItem from './Statistical-item.jsx';\nimport styles from './Statistics-list.module.css';\nimport PropTypes from 'prop-types';\n\nconst StatisticsList = ({ statisticalData }) => {\n\n return (\n     <ul className={styles.list}>\n         {statisticalData.map((statisticalElement) => {\n\n         return <StatisticalItem \n         key={statisticalElement.id}\n         label={statisticalElement.label}\n         percentage={statisticalElement.percentage}\n         />\n         })}\n     </ul>\n )\n};\n\nStatisticsList.propTypes = {\n    statisticalData: PropTypes.array.isRequired,\n}\n\n\nexport default StatisticsList;","import PropTypes from 'prop-types';\nimport styles from './FriendListItem.module.css';\n\nconst FriendListItem = ({ avatar, name, status }) => {\n    \n    return (\n        <li className={styles.item}>\n            {status ? (<span className={styles.status__active}>{status}</span>) \n            : (<span className={styles.status}>{status}</span>)\n            }\n            <img className={styles.avatar} src={avatar} alt={name} width=\"48\"/>\n            <p className={styles.name}>{name}</p>\n        </li>\n    );\n};\n\nFriendListItem.defaultProps = {\n    avatar: \"https://www.flaticon.com/svg/static/icons/svg/3135/3135715.svg\",\n    status: false,\n}\n\nFriendListItem.propTypes = {\n    avatar: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    status: PropTypes.bool,\n}\n\nexport default FriendListItem;","import FriendListItem from './FriendListItem.jsx';\nimport styles from './FriendList.module.css';\nimport PropTypes from 'prop-types';\n\nconst FriendList = ({ friends }) => {\n    return (\n        <ul className={styles.list}>\n            {friends.map((friend)=> {\n                \n                return <FriendListItem \n                    avatar={friend.avatar}\n                    name={friend.name}\n                    status={friend.isOnline}\n                    key={friend.id}\n                />\n            })}\n        </ul>\n    );\n};\n\nFriendList.propTypes = {\n    friends: PropTypes.array.isRequired,\n}\n\nexport default FriendList;","import PropTypes from 'prop-types';\nimport styles from './Transaction.module.css';\n\nconst Transaction = ({ type, amount, currency }) => {\n\n    return (\n        <tr className={styles.tb_row}>\n            <td>{type}</td>\n            <td>{amount}</td>\n            <td>{currency}</td>\n        </tr>\n    );\n};\n\nTransaction.propTypes = {\n    type: PropTypes.string.isRequired,\n    amount: PropTypes.string.isRequired,\n    currency: PropTypes.string.isRequired,\n}\n\nexport default Transaction;","import Transaction from './Transaction.jsx';\nimport PropTypes from 'prop-types';\nimport styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ transactions }) => {\n    \n    return(\n        <table className={styles.transaction_history}>\n            <thead>\n              <tr>\n                <th>Type</th>\n                <th>Amount</th>\n                <th>Currency</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {transactions.map((transaction) => {\n                  return <Transaction \n                  type={transaction.type}\n                  amount={transaction.amount}\n                  currency={transaction.currency}\n                  key={transaction.id}\n                  />\n              })}\n            </tbody>\n        </table>\n    );\n};\n\nTransactionHistory.propTypes = {\n    transactions: PropTypes.array.isRequired,\n}\n\nexport default TransactionHistory;","import Container from './components/Container/Container.jsx'\n// Task 01\nimport user from './components/Profile/user.json';\nimport Profile from './components/Profile/Profile.jsx';\n// Task 02\nimport Section from './components/Statistics/Section.jsx';\nimport statisticalData from './components/Statistics/statistical-data.json';\nimport StatisticsList from './components/Statistics/Statistics-list.jsx';\n// Task03\nimport friends from './components/Friends/friends.json';\nimport FriendList from './components/Friends/FriendList.jsx';\n// Task 04\nimport transactions from './components/TransactionHistory/transactions.json';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory.jsx'\n\n\nfunction App() {\n  return (\n    <>\n    <Container>\n      <Profile \n      name={user.name}\n      tag={user.tag}\n      location={user.location}\n      avatar={user.avatar}\n      stats={user.stats}\n      />\n    </Container>\n\n    <Container>\n    <Section>\n      <StatisticsList statisticalData={statisticalData}/>\n    </Section>\n    </Container>\n\n    <Container>\n      <FriendList friends={friends}/>\n    </Container>\n\n    <Container>\n      <TransactionHistory transactions={transactions}/>\n    </Container>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}